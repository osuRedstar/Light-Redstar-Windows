# Hanayo frontend
server {
    listen 80;
    server_name osu.ppy.sh;
    return 308 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    server_name osu.ppy.sh;

    #ssl on;
    ssl_certificate './osu/cert/openssl/cert.crt';
    ssl_certificate_key './osu/cert/openssl/cert.key';
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_prefer_server_ciphers on;

    location /d/  {
        #return 301 https://b.redstar.moe$request_uri;
        #proxy_set_header X-Real-IP $real_IP;
        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header X-Forwarded-Proto https;
        #proxy_set_header Host $http_host;
        #proxy_redirect off;
        proxy_pass http://localhost:6200$request_uri;
    }

    location / {
        proxy_set_header X-Real-IP $real_IP;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://localhost:6060;
    }

    #rippleapi
    location /api {
        proxy_set_header X-Real-IP $real_IP;
        proxy_set_header X-Forwarded_for $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect off;
        proxy_pass http://localhost:40001;
    }

    #lets
    #location ~ ^/(web|ss)/ {
    #    proxy_set_header X-Real-IP $real_IP;
    #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #    proxy_set_header X-Forwarded-Proto https;
    #    proxy_set_header Host $http_host;
    #    proxy_redirect off;
    #    proxy_pass http://lets;
    #}

    location /users {
        proxy_set_header X-Real-IP $real_IP;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://lets;
    }

    #lets
    location ~ ^/(web|ss|letsapi)/ {
        proxy_set_header X-Real-IP $real_IP;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://lets;
    }

    #ingame change avatar
    location /home/account/edit {
        return 308 https://$server_name/settings/avatar;
    }

    #redirect
    location ~ ^/beatmaps/(-?\d+)$ {
        set $original_url $1;
        return 308 https://$server_name/b/$original_url;
    }
    location ~ ^/b/(-?\d+)$ {
        set $original_url $1;
        return 308 https://new.$server_name/b/$original_url;
    }
    location /leaderboard {
        return 308 https://new.$server_name$request_uri;
    }
    location /pwreset {
        return 308 https://admin.$server_name/frontend/pwreset;
    }
}

# Avatar server
server {
    listen 80;
    server_name a.ppy.sh;
    return 308 https://$server_name$request_uri;
}

server {
    listen 443 ssl; 
    server_name a.ppy.sh;

    ssl_certificate './osu/cert/openssl/cert.crt';
    ssl_certificate_key './osu/cert/openssl/cert.key';
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_prefer_server_ciphers on;

    location / {
        proxy_set_header X-Real-IP $real_IP;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://127.0.0.1:5000;    # default port is 5000
    }
}

#b
server {
    listen 80;
    server_name b.ppy.sh;
    return 301 https://$server_name$request_uri;
}

#b ssl
server {
    listen 443 ssl;
    server_name b.ppy.sh;

    ssl_certificate './osu/cert/openssl/cert.crt';
    ssl_certificate_key './osu/cert/openssl/cert.key';
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_prefer_server_ciphers on;

    location / {
        proxy_set_header X-Real-IP $real_IP;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://localhost:6200;
    }
}

# IMAGE SERVER
server {
    listen 80;
    #server_name i.i-need-to.click;
    server_name i.ppy.sh
    return 308 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    #server_name i.i-need-to.click;
    server_name i.ppy.sh;

    #Certificate pathes
    ssl_certificate './osu/cert/openssl/cert.crt';
    ssl_certificate_key './osu/cert/openssl/cert.key';
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_prefer_server_ciphers on;

    #Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Robots-Tag none;

    root './main_menu_icons';
    index index.html;
    location / {
        #autoindex on;
        #index index.php;
        try_files $uri =404;
    }
}

# Bancho server
server {
    listen 443 ssl;
    listen 80;
    server_name c.ppy.sh c1.ppy.sh c2.ppy.sh c3.ppy.sh c4.ppy.sh c5.ppy.sh c6.ppy.sh c7.ppy.sh c8.ppy.sh c9.ppy.sh ce.ppy.sh;

    ssl_certificate './osu/cert/openssl/cert.crt';
    ssl_certificate_key './osu/cert/openssl/cert.key';
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_prefer_server_ciphers on;

    location / {
        proxy_set_header X-Real-IP $real_IP;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://bancho;
    }
}

# Old frontend
server {
    listen 80;
    #server_name old.i-need-to.click;
    server_name old.ppy.sh;
    return 308 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    #server_name old.i-need-to.click;
    server_name old.ppy.sh;

    root /var/www/osu.ppy.sh;
    index index.php index.html;

    #Certificate pathes
    ssl_certificate './osu/cert/openssl/cert.crt';
    ssl_certificate_key './osu/cert/openssl/cert.key';
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_prefer_server_ciphers on;

    ssl_protocols TLSv1.2;

    #Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Robots-Tag none;

    #location ~ \.php$ {
    #    try_files $uri =404;
    #    fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
    #    fastcgi_index index.php;
    #    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    #    include /etc/nginx/fastcgi_params;
    #}

    # LETTS
    location ~ ^/(web|ss|s|d|b|letsapi)/ {
        proxy_set_header X-Real-IP $real_IP;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://lets;
    }

    #존재의미를 모르겠음
    location / {
        #autoindex on;
        index index.php;
        rewrite ^/(u|d)/[0-9]+$ /rewrite.php;
    }
}

# new frontend
server {
    listen 80;
    server_name new.ppy.sh;
    return 308 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    server_name new.ppy.sh;

    ssl_certificate './osu/cert/openssl/cert.crt';
    ssl_certificate_key './osu/cert/openssl/cert.key';
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_prefer_server_ciphers on;

    location /api {
        proxy_set_header X-Real-IP $real_IP;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://localhost:40002;
    }

    # LETTS
    location ~ ^/(web|ss|s|d|letsapi)/ {
        proxy_set_header X-Real-IP $real_IP;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://lets;
    }

    location / {
        proxy_set_header X-Real-IP $real_IP;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://localhost:6061;    # default port is 6060
    }

    #redirect
    location /u {
        return 308 https://redstar.moe$request_uri;
    }
}

# S?
server {
    listen 80;
    #server_name s.i-need-to.click;
    server_name s.ppy.sh;
    return 308 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    #server_name s.i-need-to.click;
    server_name s.ppy.sh;

    #Certificate pathes
    ssl_certificate './osu/cert/openssl/cert.crt';
    ssl_certificate_key './osu/cert/openssl/cert.key';
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_prefer_server_ciphers on;

    #Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Robots-Tag none;

    ssl_protocols TLSv1.2;

    location / {
        proxy_set_header X-Real-IP $real_IP;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://localhost:6060;    # default port is 6060
    }
}